global
	#log syslog.myserver.mydomain.com local2
	#log 127.0.0.1:13515 len 65535 local2
	#log localhost local4
  log 127.0.0.1 local4 info

	maxconn 32000
	user  haproxy
	group haproxy
	daemon

	# turn on stats unix socket
	stats socket /var/lib/haproxy/stats user root group telegraf mode 0660
	#stats bind-process 5

    	#nbproc 5
	#cpu-map 1 0
	#cpu-map 2 1
	#cpu-map 3 2
	#cpu-map 4 3
	#cpu-map 5 4

defaults
 	log global
	errorfile 503 /etc/haproxy/503.http

	timeout connect 10s
	timeout client  10m
	timeout server  10m
	timeout check   10s
	timeout http-request    10s
	timeout http-keep-alive 10s

	option  dontlognull
	option	redispatch
	option	tcpka
	option	allbackups

##
# Frontend Services (http)
##

frontend api
	mode http
 	log global
	option httplog
        log-format 'api,frontend_name=%f,frontend_ip=%fi,frontend_port=%fp,server_name=%s,hostname=%H,backend_source_ip=%bi,backend_source_port=%bp,backend_name=%b,client_ip="%ci" accept_date=%ms,sq=%sq,status_code=%ST,bytes_read=%B,client_port=%cp,id="%ID",Tc=%Tc,Tq=%Tq,Tr=%Tr,Tt=%Tt,Tw=%Tw,reqhead="%hr",srv_conn=%sc %Ts'
        #log-format 'api,frontend_name=%s,server_name=%s,hostname=%H,backend_source_ip=%bi,backend_source_port=%bp,backend_name=%b client_ip="%ci",accept_date=%ms,sc=%sc,sq=%sq,status_code=%ST,bytes_read=%B,client_port=%cp,id="%ID",Tc=%Tc,Tq=%Tq,Tr=%Tr,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs",srv_conn=%sc %Ts'
        #log-format 'www,frontend_name=%f,backend_name=%b sc=%sc,sq=%sq,status_code=%st,bytes_read=%B,client_ip="%ci",client_port=%cp,id="%ID",Tc=%Tc,Tq=%Tq,Tr=%Tr,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs" %Ts'

	#bind-process 1

	maxconn 4000

        capture request header Host len 40
        capture request header X-Forwarded-For len 50
        capture request header Accept-Language len 50
        capture request header Referer len 200
        capture request header User-Agent len 200
        capture response header Content-Type len 30
        capture response header Content-Encoding len 10
        capture response header Cache-Control len 200
        capture response header Last-Modified len 200

	option forwardfor
	option http-server-close
	capture request header X-Forwarded-For len 50

	bind 10.31.25.68:80
	#bind /var/run/nginx/api.sock user nginx mode 600

	acl host_api hdr_beg(host) -i api.
	block unless host_api
	default_backend ngx-apid
frontend www
	mode http
	option httplog
        log-format 'www,frontend_name=%f,frontend_ip=%fi,frontend_port=%fp,server_name=%s,hostname=%H,backend_source_ip=%bi,backend_source_port=%bp,backend_name=%b,client_ip="%ci" accept_date=%ms,sq=%sq,status_code=%ST,bytes_read=%B,client_port=%cp,id="%ID",Tc=%Tc,Tq=%Tq,Tr=%Tr,Tt=%Tt,Tw=%Tw,reqhead="%hr",srv_conn=%sc %Ts'
	option forwardfor
	option http-server-close

	#bind-process 2

        capture request header Host len 40
        capture request header X-Forwarded-For len 50
        capture request header Accept-Language len 50
        capture request header Referer len 200
        capture request header User-Agent len 200
        capture response header Content-Type len 30
        capture response header Content-Encoding len 10
        capture response header Cache-Control len 200
        capture response header Last-Modified len 200
	capture request header X-Forwarded-For len 50

	maxconn 4000

	bind 10.31.25.69:80
	#bind /var/run/nginx/www.sock user nginx mode 600

	acl dom_valid hdr_end(host) -i .net .com .org .co.uk .es .eu .biz
	block unless dom_valid

	acl middle  path_beg /middleware/ /frontend/
	acl url_dyn path_end -i / .php

	use_backend ngx-midd if middle
	use_backend ngx-apps if !url_dyn
	default_backend ngx-appd

frontend apip
        mode http
        option httplog
        log-format 'apip,frontend_name=%f,frontend_ip=%fi,frontend_port=%fp,server_name=%s,hostname=%H,backend_source_ip=%bi,backend_source_port=%bp,backend_name=%b,client_ip="%ci" accept_date=%ms,sq=%sq,status_code=%ST,bytes_read=%B,client_port=%cp,id="%ID",Tc=%Tc,Tq=%Tq,Tr=%Tr,Tt=%Tt,Tw=%Tw,reqhead="%hr",srv_conn=%sc %Ts'

        #bind-process 3

	maxconn 4000

        capture request header Host len 40
        capture request header X-Forwarded-For len 50
        capture request header Accept-Language len 50
        capture request header Referer len 200
        capture request header User-Agent len 200
        capture response header Content-Type len 30
        capture response header Content-Encoding len 10
        capture response header Cache-Control len 200
        capture response header Last-Modified len 200

        option forwardfor
        option http-server-close

        bind 10.31.25.70:80

        default_backend ngx-apip

frontend appjs
	mode tcp
        option tcplog
	log-format 'appjs,frontend_name=%f,backend_name=%b sc=%sc,sq=%sq,bytes_read=%B,client_ip="%ci",client_port=%cp,Tc=%Tc,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs" %Ts'
	bind 10.31.25.70:7025
	default_backend nodejs
	 #bind-process 4


##
# Frontend Services (tcp)
##

frontend cache-core
	mode tcp
        option tcplog
	log-format 'redis,frontend_name=%f,backend_name=%b sc=%sc,sq=%sq,bytes_read=%B,client_ip="%ci",client_port=%cp,Tc=%Tc,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs" %Ts'
	maxconn 4000
	option nolinger
	bind 10.31.25.68:6379
	default_backend redis-core
	 #bind-process 4

frontend cache-mem
	mode tcp
        option tcplog
	log-format 'redis,frontend_name=%f,backend_name=%b sc=%sc,sq=%sq,bytes_read=%B,client_ip="%ci",client_port=%cp,Tc=%Tc,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs" %Ts'
	option nolinger
	bind 10.31.25.68:6380
	default_backend redis-mem
	 #bind-process 4

frontend cache-cdr
	mode tcp
        option tcplog
	log-format 'redis,frontend_name=%f,backend_name=%b sc=%sc,sq=%sq,bytes_read=%B,client_ip="%ci",client_port=%cp,Tc=%Tc,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs" %Ts'
	option nolinger
	bind 10.31.25.68:6381
	default_backend redis-cdr
	 #bind-process 4

frontend cache-num
	mode tcp
        option tcplog
	log-format 'redis,frontend_name=%f,backend_name=%b sc=%sc,sq=%sq,bytes_read=%B,client_ip="%ci",client_port=%cp,Tc=%Tc,Tt=%Tt,Tw=%Tw,reqhead="%hr",resphead="%hs" %Ts'
	option nolinger
	bind 10.31.25.68:6382
	default_backend redis-num
	 #bind-process 4
##
# Backend Services (http)
##

backend ngx-apid

	mode http
	balance leastconn
	option httpchk
	option http-server-close
	server myserver-apid-01 myserver-apid-01:80 check maxconn 1000
	server myserver-apid-02 myserver-apid-02:80 check maxconn 1000
	server myserver-apid-03 myserver-apid-03:80 check maxconn 1000
	server myserver-apid-04 myserver-apid-04:80 check maxconn 1000

backend ngx-appd
	mode http
	balance leastconn
	option httpchk
	option http-server-close
	server myserver-appd-01 myserver-appd-01:80 check maxconn 1000
	server myserver-appd-02 myserver-appd-02:80 check maxconn 1000
	server myserver-appd-03 myserver-appd-03:80 check maxconn 1000
	server myserver-appd-04 myserver-appd-04:80 check maxconn 1000

backend ngx-apps
	mode http
	balance leastconn
	option httpchk 
	option http-server-close
	server myserver-apps-01 myserver-apps-01:80 check maxconn 2000
	server myserver-apps-02 myserver-apps-02:80 check maxconn 2000

backend ngx-midd
	mode http
	balance leastconn
	option httpchk 
	option http-server-close
	server myserver-midd-01 myserver-midd-01:80 check maxconn 1000
	server myserver-midd-02 myserver-midd-02:80 check maxconn 1000
	server myserver-midd-03 myserver-midd-03:80 check maxconn 1000
	server myserver-midd-04 myserver-midd-04:80 check maxconn 1000

backend ngx-apip
        mode http
        balance leastconn
        option httpchk
        option http-server-close
	server myserver-apip-01 myserver-apip-01:80 check maxconn 1000
	server myserver-apip-02 myserver-apip-02:80 check maxconn 1000
	server myserver-apip-03 myserver-apip-03:80 check maxconn 1000
	server myserver-apip-04 myserver-apip-04:80 check maxconn 1000

backend nodejs
	mode http
	balance url_param uid
        stick-table type string size 20k nopurge
        stick on url_param(sid)
	option httpchk
	server myserver-appjs-01 myserver-appjs-01:7000 check port 9000
	server myserver-appjs-02 myserver-appjs-02:7000 check port 9000

##
# Backend Services (tcp)
##

backend redis-core
	mode tcp
	option nolinger
	balance leastconn
	server myserver-mc-03 myserver-mc-03:6379

backend redis-mem
	mode tcp
	option nolinger
	balance leastconn
	server myserver-mc-02 myserver-mc-02:6380

backend redis-cdr
	mode tcp
	option nolinger
	balance leastconn
	server myserver-mc-03 myserver-mc-03:6381

backend redis-num
	mode tcp
	option nolinger
	balance leastconn
	server myserver-mc-03 myserver-mc-03:6382

##
# Statistics settings
##

###userlist users
###	group admin users admin
###	user admin insecure-password h7nbdKX4D1D4
###	user stats insecure-password m2IgoWt6MhoC
###
###bind haproxy-stats *:81
###	mode http
###	stats enable
###	stats uri /stats
###	stats refresh 20s
###	stats show-node
###	stats show-legends
###
###	acl Auth_ReadOnly http_auth(users)
###	acl Auth_Admin http_auth_group(users) admin
###	stats http-request auth realm HAProxy-Statistics unless Auth_ReadOnly
###	stats admin if Auth_Admin



#bind haproxy-stats-process-1
#    bind *:8001
#    stats enable
#    stats uri /haproxy
#    mode http
    #bind-process 1

#bind haproxy-stats-process-2
#    bind *:8002
#    stats enable
#    stats uri /haproxy
#    mode http
    #bind-process 2

#bind haproxy-stats-process-3
#    bind *:8003
#    stats enable
#    stats uri /haproxy
#    mode http
    #bind-process 3

#bind haproxy-stats-process-4
#    bind *:8004
#    stats enable
#    stats uri /haproxy
#    mode http
    #bind-process 4

#bind haproxy-stats-process-5
#    bind *:8005
#    stats enable
#    stats uri /haproxy
#    mode http
    #bind-process 5
